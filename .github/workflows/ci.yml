name: Flutter CI/CD

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  # Build and Test Flutter App
  build_and_test:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Set up Java 17
      uses: actions/setup-java@v2
      with:
        java-version: '17'
        distribution: 'temurin'
        architecture: 'x64'
        java-package: 'jdk'
        check-latest: false

    - name: Set up Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: '3.27.1'
        channel: 'stable'
        architecture: x64
        cache: true

    - name: Verify Flutter installation
      run: flutter --version

    - name: Clean Flutter project
      run: flutter clean

    - name: Install dependencies
      run: flutter pub get
      
    - name: Check outdated dependencies
      run: flutter pub outdated

    - name: Upgrade dependencies
      run: flutter pub upgrade

    - name: Flutter Doctor
      run: flutter doctor -v
    
    - name: Run tests
      run: flutter test
      continue-on-error: true

  # Publish to Google Play Store
  android_publish:
    runs-on: ubuntu-latest
    needs: build_and_test
    if: success()

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Set up Java 17
      uses: actions/setup-java@v2
      with:
        java-version: '17'
        distribution: 'temurin'
        architecture: 'x64'
        java-package: 'jdk'
        check-latest: false

    - name: Set up Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: '3.27.1'
        channel: 'stable'
        architecture: x64
        cache: true

    - name: Verify Flutter installation
      run: flutter --version

    - name: Clean Flutter project
      run: flutter clean

    - name: Install dependencies
      run: flutter pub get

    - name: Build APK (Release)
      run: flutter build appbundle --release --no-tree-shake-icons

    - name: Decode service account key
      run: echo "${{ secrets.GOOGLE_PLAY_SERVICE_ACCOUNT_JSON }}" | base64 --decode > /tmp/service-account-key.json

    - name: Authenticate with Google Play
      uses: google-github-actions/auth@v1
      with:
          credentials_json: $(cat /tmp/service-account-key.json)

    - name: Upload to Google Play
      uses: r0adkll/upload-google-play@v1
      with:
        serviceAccountJson: /tmp/service-account-key.json
        packageName: com.askantechkode  # Replace with your app's actual package name
        releaseFiles: build/app/outputs/bundle/release/app-release.aab
        track: production  # Change to 'beta', 'production', etc., as required
        status: completed
      # env:
      #   GOOGLE_APPLICATION_CREDENTIALS: /tmp/service-account-key.json
        # credentials_json: ${{ secrets.GOOGLE_PLAY_SERVICE_ACCOUNT_JSON }}

  # Publish to App Store (iOS)
  ios_publish:
    runs-on: macos-latest
    needs: build_and_test
    if: success()

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Set up Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: '3.27.1'

    - name: Remove cached dependencies
      run: flutter pub cache clean

    # - name: Set up App Store Connect API Key
    #   run: |
    #     mkdir -p $HOME/ios  # Create the directory if it doesn't exist
    #     echo "$APP_STORE_CONNECT_API_KEY" > $HOME/ios/AuthKey.p8  # Save the secret to a file
    #   shell: bash
    #   env:
    #     APP_STORE_CONNECT_API_KEY: ${{ secrets.APP_STORE_CONNECT_API_KEY }}

    - name: Install dependencies
      run: flutter pub get

    - name: Verify Generated.xcconfig
      run: |
        echo "Checking for Generated.xcconfig..."
        ls -la ios/Flutter
        if [ ! -f ios/Flutter/Generated.xcconfig ]; then
          echo "Error: Generated.xcconfig is missing. Running build_runner..."
          flutter pub run build_runner build
        fi
            
    - name: Clean Flutter project
      run: flutter clean
    
    # - name: Debug Generated Files
    #   run: |
    #     echo "Checking Flutter Directory:"
    #     ls -la ios/Flutter
    #     echo "Generated.xcconfig should be in ios/Flutter"
    
    - name: Install Required CocoaPods Version
      run: |
        COCOAPODS_VER=$(sed -n -e 's/^COCOAPODS: \([0-9.]*\)/\1/p' ios/Podfile.lock)
        echo "Installing CocoaPods version $COCOAPODS_VER"
        sudo gem install cocoapods -v $COCOAPODS_VER
    
    - name: Debug Directory
      run: |
        echo "Current Directory: $(pwd)"
        ls -la ios
    
    - name: Reinstall Pods
      working-directory: ios
      run: |
        rm -rf Pods Podfile.lock
        pod install --repo-update

    - name: Set up Xcode
      uses: maxim-lobanov/setup-xcode@v1
      with:
        xcode-version: '15'

    - name: Check Swift version
      run: swift --version

    - name: Build iOS (Release)
      run: flutter build ios --release --no-codesign --verbose  # Add --no-codesign flag to skip codesigning if needed

    # - name: Clone Certificates Repo
    #   run: |
    #     git clone https://$MY_GITHUB_TOKEN@github.com/devaaskan/Kode_App.git /path/to/clone
    #   env:
    #     MY_GITHUB_TOKEN: ${{ secrets.MATCH_PASSWORD }}

    - name: Set up App Store Connect API Key
      run: |
        mkdir -p $HOME/ios  # Create directory for the API key
        echo "${{ secrets.APP_STORE_CONNECT_API_KEY }}" > $HOME/ios/AuthKey.p8  # Save the API key
      shell: bash

    - name: Set up fastlane
      run: |
        gem install fastlane
        fastlane --version

    - name: Fastlane match (Sign iOS app)
      run: fastlane match appstore
      env:
        MATCH_PASSWORD: ${{ secrets.MATCH_PASSWORD }}
        FASTLANE_PASSWORD: ${{ secrets.FASTLANE_PASSWORD }}
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Build and Upload to App Store
      run: |
        fastlane gym --scheme Runner --export_method app-store  # Build the signed app
        fastlane deliver --ipa ./build/ios/ipa/Runner.ipa --skip_screenshots --skip_metadata --force
      env:
        APP_STORE_CONNECT_API_KEY_PATH: $HOME/ios/AuthKey.p8
        MATCH_PASSWORD: ${{ secrets.MATCH_PASSWORD }}
        FASTLANE_PASSWORD: ${{ secrets.FASTLANE_PASSWORD }}
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}